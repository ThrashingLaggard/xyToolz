### CI/CD onboarding

This guide explains how to onboard new subprojects like `xyPorts`, `xyAvalonia`, etc., using the ready-to-use GitHub Actions template.

---

## üì¶ Required for each subproject

- A `.csproj` file located inside your repository (e.g., `xyToolz/xyPorts/xyPorts.csproj`).
- A valid NuGet API Key, stored as a **Secret** in GitHub Actions.
- Semantic commit messages following the conventional commit style (e.g., `fix:`, `feat:`, `BREAKING CHANGE:`).

---

## ‚öô How to onboard a new project

### 1. Copy the CI template

- Copy the template YAML file (e.g., `ci-template-xyProjects.yml`) into `.github/workflows/`.
- Rename it according to your project, e.g., `ci-xyPorts.yml`.

### 2. Edit the workflow

- Replace:
  - `<relative-path-to>/<ProjectName>.csproj` ‚Üí your project path, e.g., `xyToolz/xyPorts/xyPorts.csproj`
  - `<nuget-id>` ‚Üí your NuGet package name, e.g., `xyports`
  - `<YOUR_SECRET_KEY>` ‚Üí your GitHub secret for the API key, e.g., `XYPORTS_API_KEY`

### 3. Add GitHub Secrets

- Go to GitHub Repository ‚Üí Settings ‚Üí Secrets ‚Üí Actions
- Add your NuGet API Key:
  - Name: `XYPORTS_API_KEY`
  - Value: Your API key from [nuget.org](https://www.nuget.org/account/apikeys)

### 4. Push and verify

- Commit and push your updated workflow.
- Go to GitHub Actions tab and watch the workflow run:
  - ‚úÖ Restore project
  - ‚úÖ Build project
  - ‚úÖ Test project
  - ‚úÖ Pack project into a `.nupkg`
  - ‚úÖ Push package to NuGet if version is new
  - ‚úÖ Create GitHub release

---

## ‚úç Commit Message Conventions

| Type | Example | Effect |
|:-----|:--------|:-------|
| fix: | `fix: correct typo in xyPorts` | Bump patch version (x.x.+1) |
| feat: | `feat: add new TCP listener feature` | Bump minor version (x.+1.0) |
| BREAKING CHANGE | Commit body includes breaking change notice | Bump major version (+1.0.0) |

---

## üöÄ Notes

- Only if a version **does not exist** on NuGet, the package is published.
- New GitHub releases are automatically tagged based on the new version.
- `.csproj` version is automatically updated before building.

---
